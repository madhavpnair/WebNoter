/*
 * Styles for the root div of the Menu component (the one with 'sidebarRef').
 * This div will have the .sb-expanded or .sb-shrink class applied,
 * which define the --sb-width variable in their scope.
 */
.sb-expanded,
.sb-shrink {
    height: 100%; /* Ensures this div takes the full height of its parent (.side_bar) */
    display: flex;
    flex-direction: column;
    /* The 'width' transition will now be primarily on the 'aside' element,
       as 'aside' is the direct consumer of --sb-width. */
    overflow-y: auto; /* Allow scrolling for content if it overflows */

    /* Base visual styling for the sidebar background.
       Applying these here ensures consistency across states. */
    background-color: #151515;
    border-right: 1px solid #00ff88;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.4);
}

/* Expanded state: Defines the custom property for the width */
.sb-expanded {
    --sb-width: 220px; /* Desired width when expanded */
}

/* Shrink state: Defines the custom property for the width */
.sb-shrink {
    --sb-width: 60px; /* Desired width when shrunk (just for icon) */
}

/* Visibility of the nav list based on state */
/* These classes should apply to the root div[ref="sidebarRef"] */
.sb-expanded nav ul {
    display: flex; /* Display list when expanded */
    visibility: visible;
    flex-direction: column;
    opacity: 1; /* Ensure full visibility */
    transition: opacity 0.3s ease 0.1s; /* Slight delay for smoother transition */
}

.sb-shrink nav ul {
    /* We use 'display: none' to remove it from layout flow when hidden.
       'visibility: hidden' for screen readers, 'opacity: 0' for smooth fade. */
    display: none;
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.3s ease;
}


/*
 * Styles for the <aside> element.
 * THIS IS WHERE THE WIDTH IS DIRECTLY CONTROLLED BY THE VARIABLE,
 * AND WHERE THE ICON'S HORIZONTAL ALIGNMENT IS SET.
 */
aside {
    width: var(--sb-width); /* CRITICAL: Directly uses the variable defined by .sb-expanded/.sb-shrink */
    height: 100%; /* Take full height of its parent div[ref="sidebarRef"] */
    display: flex;
    flex-direction: column;
    align-items: flex-start; /* CRITICAL: Aligns children (like the icon) to the start (left) */
    box-sizing: border-box; /* Include padding/border in width */
    padding: 0.5rem 0.25rem; /* Your original padding */

    /* Make transparent to show parent's (div[ref="sidebarRef"]) background/border/shadow. */
    background-color: transparent;
    border-right: none;
    box-shadow: none;

    transition: width 0.3s ease; /* CRITICAL: Smooth transition for the aside's width */
}

/* Toggle icon */
.menu-toggle {
    cursor: pointer;
    color: #00ff88;
    margin: 0.25rem;
    font-size: 1.8rem;
    /* REMOVED: align-self: center; -- 'align-items: flex-start' on 'aside' now controls it */
    flex-shrink: 0; /* Prevent icon from shrinking */
    transition: transform 0.2s;
}

.menu-toggle:hover {
    transform: scale(1.15);
}

/* Nav list */
nav {
    flex-grow: 1; /* Allows nav to take available vertical space */
    width: 100%; /* Ensures nav takes full width of aside */
}

/* Unordered list for menu items */
ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
    flex-direction: column;
    width: 100%;
    /* display and visibility are handled by .sb-expanded/sb-shrink nav ul */
    padding: 10px 0; /* Add some padding to the list itself */
    box-sizing: border-box;
}

/* List Item Styling */
li {
    background-color: #222;
    color: #ccffcc;
    padding: 0.5rem;
    border-radius: 8px;
    margin: 0.25rem 0.5rem; /* Adjusted horizontal margin for better spacing */
    font-size: 0.85rem;
    border: 1px solid #00ff88;
    word-wrap: break-word;
    transition: background 0.2s;
}

li:hover {
    background-color: #2c2c2c;
}

span {
    display: block;
    width: 100%;
    word-break: break-word; /* Use word-break for long words/URLs */
    line-height: 1.4; /* Improve readability */
}